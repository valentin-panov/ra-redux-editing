{"version":3,"sources":["utils/genID.js","reducers/SliceServiceList.js","components/ServiceEditor.js","components/ServiceListViewer.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["module","exports","Date","now","Math","random","toString","substring","initialState","editItem","list","name","price","id","genID","counterSlice","createSlice","reducers","put","state","action","payload","save","idx","findIndex","i","push","edit","find","remove","splice","reset","actions","ServiceEditor","dispatch","useDispatch","store","useSelector","serviceList","useState","setName","setPrice","setId","formReset","useEffect","className","noValidate","autoComplete","onSubmit","event","preventDefault","onNewServiceSubmitHandler","TextField","value","onInput","e","target","label","variant","style","width","Button","color","type","onClick","ServiceListViewer","items","map","item","dataid","cursor","border","marginLeft","App","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f464fa2.chunk.js","sourcesContent":["function genID() {\n  return `${Date.now()}${Math.random().toString(36).substring(2)}`;\n}\n\nmodule.exports = genID;\n","import { createSlice } from '@reduxjs/toolkit';\nimport genID from '../utils/genID';\n\nconst initialState = {\n  editItem: null,\n  list: [\n    {\n      name: 'Замена стекла',\n      price: '21 000',\n      id: `${genID()}`,\n    },\n    {\n      name: 'Замена дисплея',\n      price: '25 000',\n      id: `${genID()}`,\n    },\n    {\n      name: 'Замена аккумулятора',\n      price: '4 000',\n      id: `${genID()}`,\n    },\n    {\n      name: 'Замена микрофона',\n      price: '5 500',\n      id: `${genID()}`,\n    },\n  ],\n};\n\nconst counterSlice = createSlice({\n  name: 'serviceList',\n  initialState,\n  reducers: {\n    put(state, action) {\n      state = action.payload;\n    },\n    save(state, action) {\n      const { id } = action.payload;\n      if (!id) {\n        state.list.push({ ...action.payload, id: genID() });\n      } else {\n        const idx = state.list.findIndex((i) => i.id === id);\n        state.list[idx] = action.payload;\n      }\n      state.editItem = null;\n    },\n    edit(state, action) {\n      const { id } = action.payload;\n      state.editItem = state.list.find((i) => i.id === id);\n    },\n\n    remove(state, action) {\n      const { id } = action.payload;\n      const editId = state.editItem ? state.editItem.id : null;\n      if (editId === id) {\n        state.editItem = null;\n      }\n      const idx = state.list.findIndex((i) => i.id === id);\n      state.list.splice(idx, 1);\n    },\n    reset(state, action) {\n      state.editItem = null;\n    },\n  },\n});\n\nexport const { edit, save, remove, reset } = counterSlice.actions;\nexport default counterSlice.reducer;\n","import React, { useState, useEffect } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { save, reset } from '../reducers/SliceServiceList';\n\nexport default function ServiceEditor() {\n  const dispatch = useDispatch();\n  const store = useSelector((store) => store.serviceList);\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [id, setId] = useState('');\n\n  const onNewServiceSubmitHandler = ({ event, payload }) => {\n    event.preventDefault();\n    dispatch(save(payload));\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setPrice('');\n    setId('');\n    dispatch(reset());\n  };\n\n  useEffect(() => {\n    const editItem = store.editItem;\n    if (editItem) {\n      setName(store.editItem.name);\n      setPrice(store.editItem.price);\n      setId(store.editItem.id);\n    } else {\n      setName('');\n      setPrice('');\n      setId('');\n    }\n  }, [store.editItem]);\n\n  return (\n    <div className='card'>\n      <form\n        className={'new-post-input'}\n        noValidate\n        autoComplete='off'\n        onSubmit={(event) => {\n          onNewServiceSubmitHandler({ event, payload: { id, name, price } });\n        }}\n      >\n        <div className='input-holder'>\n          <TextField\n            value={name}\n            onInput={(e) => setName(e.target.value)}\n            id='name'\n            label='Имя сервиса'\n            variant='outlined'\n            style={{ width: '50%' }}\n          />\n          <TextField\n            value={price}\n            onInput={(e) => setPrice(e.target.value)}\n            id='price'\n            label='Стоимость сервиса'\n            variant='outlined'\n            style={{ width: '50%' }}\n          />\n        </div>\n        <div className='btn-holder'>\n          <Button variant='contained' color='primary' type='submit'>\n            Save\n          </Button>\n          {(name || price) && (\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={() => formReset()}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { edit, remove } from '../reducers/SliceServiceList';\n\nexport default function ServiceListViewer() {\n  const dispatch = useDispatch();\n  const items = useSelector((store) => store.serviceList.list);\n\n  const onDeleteHandler = (id) => {\n    dispatch(remove({ id }));\n  };\n  const onEditHandler = (id) => {\n    dispatch(edit({ id }));\n  };\n\n  return (\n    <ul className='card'>\n      {items.map((item) => (\n        <li className='card_item' key={item.id} dataid={item.id}>\n          <span className='card_item-name'>{item.name}</span>\n          <span className='card_item-price'>{item.price}</span>\n          <EditIcon\n            style={{\n              cursor: 'pointer',\n              border: 'black 1px solid',\n              marginLeft: '1vmin',\n            }}\n            onClick={() => onEditHandler(item.id)}\n          />\n          <CloseIcon\n            style={{\n              cursor: 'pointer',\n              border: 'black 1px solid',\n              marginLeft: '1vmin',\n            }}\n            onClick={() => onDeleteHandler(item.id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ServiceEditor from './components/ServiceEditor';\nimport ServiceListViewer from './components/ServiceListViewer';\n\nexport default function App() {\n  const items = useSelector((store) => store.serviceList.list);\n\n  return (\n    <div className='wrapper>'>\n      <div className='container'>\n        <ServiceEditor />\n        {items.length > 0 && <ServiceListViewer />}\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport serviceList from '../reducers/SliceServiceList';\n\nexport default configureStore({ reducer: { serviceList } });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}